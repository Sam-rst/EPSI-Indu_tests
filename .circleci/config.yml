version: 2.1

orbs:
  node: circleci/node@5
  security: circleci/security@1.2.0
  browser-tools: circleci/browser-tools@1.4.2

executors:
  node-executor:
    docker:
      - image: circleci/node:18-browsers

jobs:
  build:
    executor: node-executor
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Code Analysis
          command: echo "Running static code analysis..."
      - run:
          name: Cleanup & Packaging
          command: echo "Cleaning and packaging the application..."
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - .next

  test:
    executor: node-executor
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Unit Tests
          command: echo "Running unit tests..."
      - run:
          name: Integration Tests
          command: echo "Running integration tests..."
      - run:
          name: Regression Tests
          command: echo "Running regression tests..."
      - run:
          name: Performance Tests
          command: echo "Running performance tests..."
      - run:
          name: Security Tests
          command: echo "Running security tests..."
      - run:
          name: Compatibility Tests
          command: echo "Running compatibility tests..."
      - run:
          name: Accessibility Tests
          command: echo "Running accessibility tests..."
      - store_test_results:
          path: ./test-results/

  deploy:
    parameters:
      environment:
        type: string
    executor: node-executor
    steps:
      - checkout
      - run:
          name: Prepare Deployment
          command: echo "Preparing deployment for <<parameters.environment>>..."
      - run:
          name: Deploying
          command: echo "Deploying to <<parameters.environment>> environment..."
      - run:
          name: Post-Deployment Tests
          command: echo "Running verification and validation tests..."
      - run:
          name: Monitoring
          command: echo "Starting monitoring process..."

workflows:
  version: 2
  ci-pipeline:
    jobs:
      - build:
          filters:
            branches:
              ignore:
                - /^feature\/.*/
                - /^hotfix\/.*/
      - test:
          requires:
            - build
      - deploy:
          name: deploy_dev
          requires:
            - test
          filters:
            branches:
              only: develop
          environment: development
      - deploy:
          name: deploy_int
          requires:
            - test
          filters:
            branches:
              only: integration
          environment: integration
      - deploy:
          name: deploy_prod
          requires:
            - test
          filters:
            branches:
              only: main
          environment: production
